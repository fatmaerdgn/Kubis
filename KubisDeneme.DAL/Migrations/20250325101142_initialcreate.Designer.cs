// <auto-generated />
using System;
using KubisDeneme.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KubisDeneme.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250325101142_initialcreate")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KubisDeneme.DAL.Models.Kitap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("GuncellenmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SayfaSayisi")
                        .HasColumnType("integer");

                    b.Property<int>("İlkYayinYili")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Kitaplar");
                });

            modelBuilder.Entity("KubisDeneme.DAL.Models.KitapKitapTuru", b =>
                {
                    b.Property<int>("KitapId")
                        .HasColumnType("integer");

                    b.Property<int>("KitapTuruId")
                        .HasColumnType("integer");

                    b.HasKey("KitapId", "KitapTuruId");

                    b.HasIndex("KitapTuruId");

                    b.ToTable("KitapKitapTurleri");
                });

            modelBuilder.Entity("KubisDeneme.DAL.Models.KitapTuru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("GuncellenmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("KitapTurleri");
                });

            modelBuilder.Entity("KubisDeneme.DAL.Models.KitapYazar", b =>
                {
                    b.Property<int>("KitapId")
                        .HasColumnType("integer");

                    b.Property<int>("YazarId")
                        .HasColumnType("integer");

                    b.HasKey("KitapId", "YazarId");

                    b.HasIndex("YazarId");

                    b.ToTable("KitapYazarlar");
                });

            modelBuilder.Entity("KubisDeneme.DAL.Models.Ulke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("GuncellenmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Ulkeler");
                });

            modelBuilder.Entity("KubisDeneme.DAL.Models.Yazar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DogumTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("GuncellenmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ISNI")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UlkeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UlkeId");

                    b.ToTable("Yazarlar");
                });

            modelBuilder.Entity("KubisDeneme.DAL.Models.KitapKitapTuru", b =>
                {
                    b.HasOne("KubisDeneme.DAL.Models.Kitap", "Kitap")
                        .WithMany("KitapKitapTurleri")
                        .HasForeignKey("KitapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KubisDeneme.DAL.Models.KitapTuru", "KitapTuru")
                        .WithMany("KitapKitapTurleri")
                        .HasForeignKey("KitapTuruId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kitap");

                    b.Navigation("KitapTuru");
                });

            modelBuilder.Entity("KubisDeneme.DAL.Models.KitapYazar", b =>
                {
                    b.HasOne("KubisDeneme.DAL.Models.Kitap", "Kitap")
                        .WithMany("KitapYazarlar")
                        .HasForeignKey("KitapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KubisDeneme.DAL.Models.Yazar", "Yazar")
                        .WithMany("KitapYazarlar")
                        .HasForeignKey("YazarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kitap");

                    b.Navigation("Yazar");
                });

            modelBuilder.Entity("KubisDeneme.DAL.Models.Yazar", b =>
                {
                    b.HasOne("KubisDeneme.DAL.Models.Ulke", "Ulke")
                        .WithMany("Yazarlar")
                        .HasForeignKey("UlkeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ulke");
                });

            modelBuilder.Entity("KubisDeneme.DAL.Models.Kitap", b =>
                {
                    b.Navigation("KitapKitapTurleri");

                    b.Navigation("KitapYazarlar");
                });

            modelBuilder.Entity("KubisDeneme.DAL.Models.KitapTuru", b =>
                {
                    b.Navigation("KitapKitapTurleri");
                });

            modelBuilder.Entity("KubisDeneme.DAL.Models.Ulke", b =>
                {
                    b.Navigation("Yazarlar");
                });

            modelBuilder.Entity("KubisDeneme.DAL.Models.Yazar", b =>
                {
                    b.Navigation("KitapYazarlar");
                });
#pragma warning restore 612, 618
        }
    }
}
